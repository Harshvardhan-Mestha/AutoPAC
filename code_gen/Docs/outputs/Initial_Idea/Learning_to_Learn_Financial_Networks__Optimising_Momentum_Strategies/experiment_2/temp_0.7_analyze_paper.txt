## Literature Review: Learning to Learn Financial Networks for Optimizing Momentum Strategies

**Paper:** Learning to Learn Financial Networks for Optimising Momentum Strategies by Xingyue (Stacy) Pu, Stefan Zohren, Stephen Roberts, and Xiaowen Dong

**Focus:** Methodology and its effectiveness in learning financial networks and optimizing momentum strategies.

**Methodology Summary:**

1. **Learning to Learn Graph Topologies (L2G):**
    * The core of the methodology lies in the L2G layer, a neural network inspired by the primal-dual splitting algorithm used in traditional graph learning.
    * This layer takes asset features (historical returns) as input and outputs a graph adjacency matrix representing the connections between assets.
    * Learnable parameters replace fixed hyperparameters, allowing the network to adapt and learn the optimal graph structure for the specific task.

2. **Network Momentum Feature Construction:**
    * The learned adjacency matrix is normalized to account for nodes with varying degrees of connection.
    * A linear layer combines individual asset momentum features (e.g., volatility-normalized returns, MACD indicators) based on the network connections.
    * This creates network momentum features that capture the influence of connected assets on each other's future performance.

3. **Model Variants:**
    * **L2GMOM:** This model uses the network momentum features to estimate trend and then generates trading signals based on the sign of the trend.
    * **L2GMOM_SR:** This model directly outputs trading positions using a tanh activation function to constrain values within the [-1, 1] range. It is trained using the negative Sharpe Ratio as the loss function, aiming for optimal risk-adjusted returns.

4. **Input Features:**
    * Eight momentum features are used:
        * Volatility-normalized returns over various lookback periods (1 day, 1 month, 3 months, 6 months, 1 year).
        * MACD indicators with three different time scale combinations.
    * A 252-day lookback window is used to capture stable similarities for robust graph learning. 
    * Winsorization is applied to mitigate the impact of outliers.

5. **Loss Functions:**
    * **L2GMOM:** Mean Squared Error (MSE) between predicted trend and actual returns.
    * **L2GMOM_SR:** Negative Sharpe Ratio for direct optimization of risk-adjusted returns.

**Evaluation and Findings:**

* **Backtesting:** The models were tested on 64 continuous future contracts across various asset classes (commodities, equities, fixed income, and currencies) over a 20-year period (2000-2020).
* **Performance:**
    * Both L2GMOM and L2GMOM_SR outperformed benchmark strategies (e.g., Long Only, MACD, Linear Regression) in terms of Sharpe Ratio, Sortino Ratio, Calmar Ratio, and other risk-adjusted return metrics.
    * L2GMOM demonstrated better risk management with lower downside deviation and shorter maximum drawdown duration.
    * L2GMOM_SR achieved the highest risk-adjusted returns with the lowest volatility. 
* **Diversification:**
    * L2GMOM showed moderate diversification potential compared to model-free strategies like MACD. 
    *  Limited diversification was observed when comparing L2GMOM with other graph-based strategies, suggesting similar underlying driving factors. 
* **Turnover Analysis:**
    * Graph-based strategies (including L2GMOM and L2GMOM_SR) exhibited better cost resilience compared to models without graph learning, maintaining positive Sharpe ratios even with higher transaction costs. 
* **Network Analysis:**
    * The learned networks revealed community structures aligned with asset classes, highlighting the interconnections and momentum spillover effects within and across asset classes. 
    * Temporal variations in network structure were observed, with increased inter-class connections during turbulent market periods.
    * L2GMOM_SR produced denser networks with more uniform edge weights, potentially contributing to its superior risk-adjusted performance.

**Strengths of the Methodology:**

* **End-to-End Learning:** The framework simultaneously learns the network structure and optimizes the momentum strategy, leading to better performance compared to separate approaches.
* **Data Efficiency:** It utilizes readily available historical return data, eliminating the need for expensive and specialized datasets.
* **Interpretability:** The learned networks provide insights into the relationships between assets and the dynamics of momentum propagation.
* **Flexibility:** The framework can be adapted to different loss functions (e.g., Sharpe Ratio) and potentially incorporate additional features or network structures.

**Potential Future Research Directions:**

* **Turnover Reduction:** Exploring techniques like turnover regularization to further improve cost efficiency.
* **Alternative Network Structures:** Investigating the use of different graph learning methods or incorporating prior knowledge about asset relationships.
* **Dynamic Networks:** Modeling the evolution of network structure over time to capture changing market conditions. 
* **Application to Other Asset Classes or Financial Tasks:**  Exploring the framework's effectiveness in different contexts beyond momentum strategies. 

**Overall, the proposed methodology presents a promising approach for learning financial networks and optimizing momentum strategies. Its data efficiency, interpretability, and strong empirical performance make it a valuable tool for quantitative finance research and practice.** 
